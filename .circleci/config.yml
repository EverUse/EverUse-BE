# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  node: circleci/node@5.0.0
  ruby: circleci/ruby@2.0.1
  heroku: circleci/heroku@2.0.0
  # See: https://circleci.com/developer/orbs/orb/circleci/ruby


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    docker:
      - image: cimg/ruby:3.2.2
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
          google_private_id_key: "fe21a850b47fa9edc4dc61b18408dc06ba994cea"
          google_private_key: "-----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC36EZ8JnJGJyqV\nDIKLdwZkdDDLat5ncVsOBctnlSncZJ6JFvvePE8eSah+Kr4p4JDYcy/k7q1MT7i1\n/g67U/fR1qUgjiSvfNdTDdMBHL6BmtclTxTKdU+TBUSn1OIm3SicEVWyJ1CuEPRo\nuhtoSqQ5EVUwYDt2NzQMKEmM3rJxJdiwWND2eOqcqNNrBlje4Ga+mL/bCOngFJ6m\n3DwJ9OnHUaud7C4+FJmkJ58gtfxMAM52gj7vSRuei+Ms0eMHcKR6mtqBFhMj6MJJ\nKyyLvE4wETgBpBTD8BZf+I+GlZAwSC/Wta5cZVsguuqXZw2DMLPyH0fO7naq4VwH\nJUJ+hB4rAgMBAAECggEAAVxhVSSrgYhjevWB4CeAjGFK0SRYiFRsuWIoaWPD3E6Y\nqkV8Z4zoD1XQ1fXOMRFpSyi9Ok7E6/kjl9BwDTJcATwvbIh5dr+EbUrcfImTO34x\nsXV7qsQK03jpAeum8mVPvR4XLNa4RkC9xkGGS/CtdQ4ajVHcnVNIP9Bq3i99UVxg\nCYZ/x8lUA7MJAY9ahmjT4CyjqVF4o04dHPbGB+KbRMn3NYF7laNUe08JHhRUYGum\nmGe1h2AS1ROPPjGKKdqlppJO44OmcMvbpK7IMYQc0IkK3tsRLu2/od6OMN8AYGvN\nFFaJyfAyK37jOAK6ltkTwIf2f7m4plRQ35G5ZqDT9QKBgQD98gYcBqrb+10laTC4\n4MHTMMmwPKIti04FEOpIqllruJXFIrNiSwzlfwuKnntx9TIhAw1q/jiY1AMG6Ydt\nKUqZPYl4zNLt6io3R0mQzWRP8J/TYCS+7b25dggYn895WpRWXtYqniT45jO3/6G0\nvHyi/dzEw9wtGSuDX99N33d8lQKBgQC5ZS/4CxPd9ERruz52Dg7IAWI2JxnznPaP\ng9Eg7XzjzXDGGn5n4B6ONT/AUofyWCL2diap9Ew4YFGl2meRzkSie2dsf+KdRos5\n4jMcp2lDRk8VEev2gfyz1SH7V+Ek/Axdp2R/oOPTq65W/6XWQI6Ov9ydRBxVx57l\ndIt77v+/vwKBgQCPtcd/VMacd0PfSAgqmAcYXSPGeInO/GbKtyfet4ijTXJ0fY7G\nsXI67gq6B7YUZ45W4ENXqUaeNl0ALGhXfmaZEhoaIs+7lCkP32fialm6Y5IPLPme\nkywrKICsbsQbCQepWUIaHCUQNjZOinwYrBJcqw2kzLJtUzEsx7S3fR9BgQKBgQCY\nIiu53MVBxpd63B1GXQTOJSyFiZKnMS+21xF+dsOcX9JiDg2aifQo+BNHa7I5MRAH\ntS7HGjyNqqR1eAKzSFNUDfXxuAOq0d+f8TnGEq6zUPfGL321PDe1DnmjOhr78YTo\nOVujy9AIu4IFzCU26qTRCSotN14VGgkO+5MWcSoXGwKBgQDsmf96SggNKP1Mv+ne\ngKp1GhYo60hVBgrSrhL7q/k2cH4ed57ds68PIDX64ptsjy4d3iwWv776pYe0UU0j\neKx3PPzj8tqxJmG7bEfuDRftNrMMNFFGy9frWdhTaDuwe1hb8WVY0ImEs3jyt5qH\n7244IwswkhYC2Gor2WgvEY2MBg==\n-----END PRIVATE KEY-----\n"
          google_client_id: "110833511951363942669"
          google_client_email: "everuse-sheets@everuse.iam.gserviceaccount.com"
          google_client_cert_url: "https://www.googleapis.com/robot/v1/metadata/x509/everuse-sheets%40everuse.iam.gserviceaccount.com"
          spreadsheet_key: '1Ku5iv8SXot9Z6ukHj_ZusdkCBG7tQfl-uNrZnhZwfho'
      - image: circleci/postgres:11
        environment: # environment variables for database, it is kind of obvious but it is important that they match with your test config in database.yml
          POSTGRES_USER: postgres
          POSTGRES_DB: EverUse_test
          POSTGRES_PASSWORD: secret
      # - image: cimg/redis:6.2.6
    executor: ruby/default
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - ruby/install-deps
      - run:
          name: Force Bundler Version
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bin/rails db:{create,migrate} --trace
      - run:
          name: Run rspec in parallel
          command: bundle exec rspec
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs
  deploy:
    docker:
      - image: cimg/ruby:3.2.2
    steps:
      - checkout
      - run:
          name: push
          command: git push "https://heroku:${HEROKU_API_KEY}@git.heroku.com/everuse-be.git"
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main